<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jérôme Pin</title>
    <link>https://jeromepin.fr/</link>
    <description>Recent content on Jérôme Pin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    
        <atom:link href="https://jeromepin.fr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Drop ALT led configuration using bitmask</title>
      <link>https://jeromepin.fr/drop-alt-led-configuration/</link>
      <pubDate>Sun, 23 Aug 2020 12:23:13 +0200</pubDate>
      
      <guid>https://jeromepin.fr/drop-alt-led-configuration/</guid>
      <description>&lt;p&gt;I recently purchased an &lt;a href=&#34;https://drop.com/buy/drop-alt-high-profile-mechanical-keyboard&#34;&gt;ALT mechanical keyboard&lt;/a&gt; from Drop (formerly Massdrop).&lt;/p&gt;
&lt;p&gt;After going through the mandatory modding (changing &lt;em&gt;Halo Trues&lt;/em&gt; for &lt;em&gt;Aliaz&lt;/em&gt; switches, changing stabilizers, lubbing what needed to be lubed, etc&amp;hellip;), I started compiling and flashing my own custom &lt;a href=&#34;https://github.com/qmk/qmk_firmware&#34;&gt;QMK firmware&lt;/a&gt;. It worked pretty great, but I was stuck at backlight configuration. I could not understand or guess how to configure it.&lt;/p&gt;
&lt;p&gt;I ended up &lt;a href=&#34;https://github.com/qmk/qmk_firmware/blob/master/keyboards/massdrop/alt/config_led.h#L52-L169&#34;&gt;reading code&lt;/a&gt; and &lt;a href=&#34;https://github.com/qmk/qmk_firmware/blob/master/keyboards/massdrop/alt/keymaps/default_md/keymap.c#L183-L221&#34;&gt;examples&lt;/a&gt; provided by QMK. The keyboard is built upon a 105 LED matrix.&lt;/p&gt;
&lt;p&gt;A particular example caught my attention :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#f00;font-style:italic&#34;&gt;//Specific LEDs use specified RGB values while all others are off
&lt;/span&gt;&lt;span style=&#34;color:#f00;font-style:italic&#34;&gt;&lt;/span&gt;{ .flags = LED_FLAG_MATCH_ID | LED_FLAG_USE_RGB, \
    .id0 = 0xFF, \
    .id1 = 0x00FF, \
    .id2 = 0x0000FF00, \
    .id3 = 0xFF000000, \
      .r = 75, \
      .g = 150, \
      .b = 225 \
},
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;And it struck me ! Bitmask ! The only thing that can select &amp;ndash; at the same time &amp;ndash; both a single address and multiple ones is a &lt;em&gt;bitmask&lt;/em&gt; !&lt;/p&gt;
&lt;p&gt;By converting hexadecimal values to decimal, we get familiar-looking numbers. They belong to the &lt;a href=&#34;https://en.wikipedia.org/wiki/1_%2B_2_%2B_4_%2B_8_%2B_%E2%8B%AF&#34;&gt;&lt;em&gt;successive power of two&lt;/em&gt;&lt;/a&gt; serie :&lt;/p&gt;
&lt;p&gt;$$
\mathrm{0xFF} = 255 = 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 = \displaystyle\sum_{i=0}^{7} 2^{i}
$$&lt;/p&gt;
&lt;p&gt;$$
\mathrm{0x0000FF00} = 65280 = 1 + 2 + \ldots = \displaystyle\sum_{i=8}^{15} 2^{i}
$$&lt;/p&gt;
&lt;p&gt;$$
\mathrm{0xFF000000} = 4278190080 = 16 777 216 + 33 554 432 + \ldots = \displaystyle\sum_{i=24}^{31} 2^{i}
$$&lt;/p&gt;
&lt;p&gt;The keyboard is separated in 4 groups of 32 LEDs (except the last one of 9 LEDs) :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.id0&lt;/code&gt;: from &lt;code&gt;Esc&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.id1&lt;/code&gt;: from &lt;code&gt;s&lt;/code&gt; to &lt;code&gt;fn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.id2&lt;/code&gt;: from &lt;code&gt;Left Arrow&lt;/code&gt; to &lt;em&gt;Underglow LED above &lt;code&gt;5&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.id3&lt;/code&gt;: from &lt;em&gt;Underglow LED above &lt;code&gt;4&lt;/code&gt;&lt;/em&gt; to the end (&lt;em&gt;Underglow LED left of &lt;code&gt;Ctrl&lt;/code&gt;&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each LED is assigned a number from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;31&lt;/code&gt; based on its position in the group.&lt;/p&gt;
&lt;p&gt;Let say we want to display a green color on the first four letters of every row (&lt;code&gt;Q(16)&lt;/code&gt;, &lt;code&gt;W(17)&lt;/code&gt;, &lt;code&gt;E(18)&lt;/code&gt;, &lt;code&gt;R(19)&lt;/code&gt;, &lt;code&gt;A(31)&lt;/code&gt;, &lt;code&gt;S(0)&lt;/code&gt;, &lt;code&gt;D(1)&lt;/code&gt;, &lt;code&gt;F(2)&lt;/code&gt;, &lt;code&gt;Z(13)&lt;/code&gt;, &lt;code&gt;X(14)&lt;/code&gt;, &lt;code&gt;C(15)&lt;/code&gt;, &lt;code&gt;V(16)&lt;/code&gt;). We just need to add every value as a power of two :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$$ .id0 = 2^{16} + 2^{17} + 2^{18} + 2^{19} + 2^{31} = 2 148 466 688 $$&lt;/li&gt;
&lt;li&gt;$$ .id1 = 2^0 + 2^1 + 2^2 + 2^{13} + 2^{14} + 2^{15} + 2^{16} = 122 887 $$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And we get :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;{ .flags = LED_FLAG_MATCH_ID | LED_FLAG_USE_RGB, \
    .id0 = 2148466688, \
    .id1 = 122887, \
    .id2 = 0, \
    .id3 = 0, \
    .r = 0, \
    .g = 255, \
    .b = 0, \
},
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;While being a smart way to target both one and multiple LEDs, it&amp;rsquo;s not very easy to understand and even less to change.&lt;/p&gt;
&lt;p&gt;Fortunately, someone very nice created a bitmask generator &lt;a href=&#34;http://daedalusrising.com/maskdrop/&#34;&gt;online&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Graphes : Le danger des séries empilées</title>
      <link>https://jeromepin.fr/graphes-le-danger-des-series-empilees/</link>
      <pubDate>Sun, 03 May 2020 11:33:00 +0100</pubDate>
      
      <guid>https://jeromepin.fr/graphes-le-danger-des-series-empilees/</guid>
      <description>&lt;p&gt;Le graphe suivant montre un nombre de requêtes en fonction du temps sur 4 serveurs. Les séries sont empilées afin de pouvoir facilement lire la somme de ces requêtes sur l&amp;rsquo;ensemble de l&amp;rsquo;infrastructure.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://jeromepin.fr/images/graphes-le-danger-des-series-empilees/mischievous_node_first.svg&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;Exemple typiques de séries empilées : nombre de requêtes en fonction du temps sur 4 serveurs&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Il est très facile d&amp;rsquo;extraire quelques informations :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 des 4 serveurs reçoivent chacun une dizaine de requêtes par seconde;&lt;/li&gt;
&lt;li&gt;L&amp;rsquo;un des serveurs reçoit plus de requêtes que les autres;&lt;/li&gt;
&lt;li&gt;L&amp;rsquo;ensemble de l&amp;rsquo;infrastructure encaisse une soixantaine de requêtes par seconde;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pourquoi-les-séries-empilées-sont-dangereuses-&#34;&gt;Pourquoi les séries empilées sont dangereuses ?&lt;/h2&gt;
&lt;p&gt;Il semble aussi évident que l&amp;rsquo;infrastructure a vu une chute massive des requêtes sur chacun des noeuds.&lt;/p&gt;
&lt;p&gt;En réordonnant les séries en plaçant le serveur le plus chargé en haut, une différence intéréssante se dessine :&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://jeromepin.fr/images/graphes-le-danger-des-series-empilees/mischievous_node_last.svg&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;Le même exemple avec les séries ordonnées différement&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Toute l&amp;rsquo;infrastructure n&amp;rsquo;est pas affectée par la diminution brutale du nombre de requêtes mais seulement un des serveurs !&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://media.giphy.com/media/3o7btW7VDxqrhJEnqE/giphy.gif&#34; width=&#34;300&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;Denis Brogniart est stupéfait de cette découverte&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;est-ce-un-problème-avec-les-données--avec-le-graphe-&#34;&gt;Est-ce un problème avec les données ? Avec le graphe ?&lt;/h3&gt;
&lt;p&gt;Les séries inférieures influencent la forme des séries supérieures. L&amp;rsquo;ordre des séries change donc la perception que l&amp;rsquo;on a d&amp;rsquo;un graphe et, par conséquent, les conclusions qu&amp;rsquo;on en tire !&lt;/p&gt;
&lt;p&gt;Le fait de pouvoir facilement lire une somme pousse à ne plus prendre en compte les différences entre les séries mais seulement lire la série la plus haute et ainsi voir, de façon erronée, une baisse sur toute l&amp;rsquo;infrastructure.&lt;/p&gt;
&lt;p&gt;Ce ne sont ni les données ni leur représentation qui sont erronées, mais bien la lecture que nous en avons. Sans être vigilant, il est facile de penser que la baisse du nombre de requêtes affecte tout l&amp;rsquo;infrastructure.&lt;/p&gt;
&lt;h2 id=&#34;comment-sen-prémunir-&#34;&gt;Comment s&amp;rsquo;en prémunir ?&lt;/h2&gt;
&lt;p&gt;Il est très facile de se prémunir d&amp;rsquo;une telle erreur d&amp;rsquo;interprétation : ne pas empiler les séries. Pour pouvoir quand même lire un total, il suffit d&amp;rsquo;ajouter une série représentant leur somme :&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://jeromepin.fr/images/graphes-le-danger-des-series-empilees/unstacked.svg&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;Le même exemple sans empiler les séries et avec une somme des séries (noir)&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Avec cette représentation, il apparait de façon très évidente que les variations d&amp;rsquo;une série ont bien un effet sur le total (puisqu&amp;rsquo;il s&amp;rsquo;agit de la somme des points des séries) mais pas sur les autres séries.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Timeseries : Cardinalité et explosion</title>
      <link>https://jeromepin.fr/timeseries-cardinalite-et-explosion/</link>
      <pubDate>Sat, 04 Jan 2020 21:12:00 +0100</pubDate>
      
      <guid>https://jeromepin.fr/timeseries-cardinalite-et-explosion/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://fr.wikipedia.org/wiki/Cardinalit%C3%A9_(math%C3%A9matiques)&#34;&gt;Wikipédia&lt;/a&gt; indique :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;En mathématiques, la cardinalité est une notion de taille pour les ensembles. Lorsqu&amp;rsquo;un ensemble est fini, c&amp;rsquo;est-à-dire si ses éléments peuvent être listés par une suite finie, son cardinal est la longueur de cette suite, autrement dit il s&amp;rsquo;agit du nombre d&amp;rsquo;éléments de l&amp;rsquo;ensemble.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;C&amp;rsquo;est donc le nombre de valeurs uniques d&amp;rsquo;un ensemble.&lt;/p&gt;
&lt;p&gt;Dans le cas de Prometheus, la cardinalité d&amp;rsquo;une métrique $M$ est le produit de la cardinalité de ses $n$ labels $L_{n}$ tel que :&lt;/p&gt;
&lt;p&gt;$$ Card(M) = \prod_{n=0}^{X}Card(L_n) $$&lt;/p&gt;
&lt;p&gt;Ainsi, il est facile d&amp;rsquo;imaginer une métrique &lt;code&gt;http_request_duration_seconds&lt;/code&gt; ayant les caractéristiques suivantes :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un label &lt;code&gt;verb&lt;/code&gt; qui représente les méthodes HTTP et qui a pour valeurs possibles : &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt; et &lt;code&gt;DELETE&lt;/code&gt; ($Card = 4$);&lt;/li&gt;
&lt;li&gt;Un label &lt;code&gt;le&lt;/code&gt; qui est le bucket dans lequel la mesure tombe. Il a pour valeurs possibles : 0.1, 0.2, 0.5, 1, &lt;code&gt;+Inf&lt;/code&gt; ($Card = 5$);&lt;/li&gt;
&lt;li&gt;Un label &lt;code&gt;browser&lt;/code&gt; qui indique le navigateur utilisé par le client : Chrome, Firefox, IE, Edge, Safari, Opera, Others ($Card = 7$);&lt;/li&gt;
&lt;li&gt;Un label &lt;code&gt;device&lt;/code&gt; qui représente la famille de périphérique utilisé par le client : Desktop, Mobile, Tablet ($Card = 3$);&lt;/li&gt;
&lt;li&gt;En enfin, un label &lt;code&gt;os&lt;/code&gt; qui indique la &amp;ldquo;marque&amp;rdquo; de l&amp;rsquo;OS utilisé par le client : Linux, Microsoft, Apple ($Card = 3$);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si la métrique n&amp;rsquo;avait qu&amp;rsquo;un seul label, voire deux, la cardinalité serait faible. Le problème survient lorsque un label est ajouté ou lorsque la cardinalité d&amp;rsquo;un label augmente subitement. La métrique fini innévitablement par arriver à une &lt;a href=&#34;https://fr.wikipedia.org/wiki/Explosion_combinatoire&#34;&gt;explosion combinatoire&lt;/a&gt; : un petit changement du nombre de données rend la cardinalité de notre métrique irraisonable.&lt;/p&gt;
&lt;p&gt;Au début, tout commence de manière raisonnable : il n&amp;rsquo;y a que 2 verbes et 5 buckets. Puis on se dit qu&amp;rsquo;il faudrait séparer par OS. Puis par famille de client. Puis par navigateur. Puis par&amp;hellip; Et la cardinalité est passée de $2 \cdot 5 = 10$ à $4 \cdot 5 \cdot 7 \cdot 3 \cdot 3 = 1260$ !&lt;/p&gt;
&lt;p&gt;Le plus surprenant c&amp;rsquo;est que l&amp;rsquo;augmentation de la cardinalité des labels augmente considérablement la cardinalité de la métrique ! Admettons que chaque cardinalité augmente de 1 (ce qui est peu), la cardinalité de la métrique passe de $1260$ à $5 \cdot 6 \cdot 8 \cdot 4 \cdot 4 = 3840$, soit plus du triple de la valeur initiale !&lt;/p&gt;
&lt;p&gt;Que va-t&amp;rsquo;il se passer si l&amp;rsquo;on décide d&amp;rsquo;ajouter un label &lt;code&gt;customer&lt;/code&gt; qui a pour valeur un UUID ? D&amp;rsquo;après &lt;a href=&#34;https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)&#34;&gt;Wikipédia&lt;/a&gt;, un UUID dans sa version 4 a 122 bits générés aléatoirement à 0 ou 1, soit $2^{122}$ possiblités !&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://media.giphy.com/media/O3GqAYR9jFxLi/source.gif&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;Boooooom&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Il semble évident que demander une granularité aussi fine à un tel système est impossible. Les timeseries sont conçues pour traiter et afficher des données en temps réel. Malheureusement, le temps réel est quelque chose de très coûteux, il faut donc faire quelques compromis. Limiter la précision (et donc la cardinalité) est un bon moyen d&amp;rsquo;équilibrer le cout. Il faudrait alors se tourner vers un second système dédié à de la précision, tel que l&amp;rsquo;analyse de logs, pour compléter les mesures.&lt;/p&gt;
&lt;p&gt;Les timeseries servent à donner une vue d&amp;rsquo;ensemble d&amp;rsquo;un système (que ce soit au niveau d&amp;rsquo;un serveur, d&amp;rsquo;une application, d&amp;rsquo;un cluster, d&amp;rsquo;un datacenter&amp;hellip;) mais ne peuvent pas servir à débugger et à trouver l&amp;rsquo;origine d&amp;rsquo;un problème. Une fois qu&amp;rsquo;un problème est détecté, c&amp;rsquo;est vers les logs qu&amp;rsquo;il faut se tourner.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Esctl: managing elasticsearch from the command line</title>
      <link>https://jeromepin.fr/esctl-managing-elasticsearch-from-command-line/</link>
      <pubDate>Sun, 22 Sep 2019 22:08:00 +0100</pubDate>
      
      <guid>https://jeromepin.fr/esctl-managing-elasticsearch-from-command-line/</guid>
      <description>&lt;p&gt;During my month of unemployment, I spent time thinking on how I had tackled technical problems in my last year-and-half of work. The best part of my day-to-day mission was to ensure our Elasticsearch clusters were healthy, secured and efficient. To that end, I was using a combination of tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;raw &lt;code&gt;curl&lt;/code&gt; commands,&lt;/li&gt;
&lt;li&gt;bash scripts I wrote,&lt;/li&gt;
&lt;li&gt;graphical interfaces,&lt;/li&gt;
&lt;li&gt;Prometheus monitoring and alerting,&lt;/li&gt;
&lt;li&gt;Some automation,&lt;/li&gt;
&lt;li&gt;commands embedded in SaltStack&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;rsquo;s easy to see there is no common way to manage those clusters, and I was relying on a bunch of disparate stuff.&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The problem&lt;/h2&gt;
&lt;p&gt;The issue does not come from Elasticsearch itself but is inherent to any software that exposes an HTTP API to manage itself: curl-of-the-death.&lt;/p&gt;
&lt;p&gt;Here are some commands I used to run on a regular basis (examples come from &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html&#34;&gt;Elasticsearch&amp;rsquo;s documentation&lt;/a&gt;).&lt;/p&gt;
&lt;h4 id=&#34;list-indices&#34;&gt;List indices&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -X GET &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;localhost:9200/_cat/indices&amp;#34;&lt;/span&gt;
yellow open foo VrIiXmIRRA6BNP5JWaXKqA 1 1 0 0 283b 283b
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;change-the-number-of-replicas-of-a-given-index&#34;&gt;Change the number of replicas of a given index&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -X PUT &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;localhost:9200/twitter/_settings?pretty&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -d&lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;{
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;    &amp;#34;index&amp;#34; : {
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;        &amp;#34;number_of_replicas&amp;#34; : 2
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;reset-a-indexs-refresh-interval-to-its-default-value&#34;&gt;Reset a index&amp;rsquo;s refresh interval to its default value&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -X PUT &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;localhost:9200/twitter/_settings?pretty&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -d&lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;{
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;    &amp;#34;index&amp;#34; : {
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;        &amp;#34;refresh_interval&amp;#34; : null
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;pretty-print-cluster-stats&#34;&gt;Pretty-print cluster stats&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -X GET &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;localhost:9200/_cluster/stats&amp;#34;&lt;/span&gt;
{
    &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;_nodes&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;: 1,
        &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;successful&amp;#34;&lt;/span&gt;: 1,
        &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;failed&amp;#34;&lt;/span&gt;: 0
    },
    ...
    &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;nodes&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;: 1,
            &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;: 1,
            &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;coordinating_only&amp;#34;&lt;/span&gt;: 0,
            &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;: 1,
            &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;ingest&amp;#34;&lt;/span&gt;: 1
        },
        &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;versions&amp;#34;&lt;/span&gt;: [
            &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;7.2.1&amp;#34;&lt;/span&gt;
        ],
        &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;jvm&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;max_uptime_in_millis&amp;#34;&lt;/span&gt;: 1565394,
            &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;versions&amp;#34;&lt;/span&gt;: [
                {
                    &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;12.0.1&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;vm_name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;OpenJDK 64-Bit Server VM&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;vm_version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;12.0.1+12&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;vm_vendor&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;Oracle Corporation&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;bundled_jdk&amp;#34;&lt;/span&gt;: true,
                    &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;using_bundled_jdk&amp;#34;&lt;/span&gt;: true,
                    &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;: 1
                }
            ],
            &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;mem&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;heap_used_in_bytes&amp;#34;&lt;/span&gt;: 128029720,
                &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;heap_max_in_bytes&amp;#34;&lt;/span&gt;: 1056309248
            },
            &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;threads&amp;#34;&lt;/span&gt;: 31
        },
        ...
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;reroute-shard-0-of-index-test-from-node1-to-node2&#34;&gt;Reroute shard 0 of index &amp;lsquo;test&amp;rsquo; from node1 to node2&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -X POST &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;localhost:9200/_cluster/reroute?pretty&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -d&lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;{
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;    &amp;#34;commands&amp;#34; : [
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;        {
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;            &amp;#34;move&amp;#34; : {
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;                &amp;#34;index&amp;#34; : &amp;#34;test&amp;#34;, &amp;#34;shard&amp;#34; : 0,
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;                &amp;#34;from_node&amp;#34; : &amp;#34;node1&amp;#34;, &amp;#34;to_node&amp;#34; : &amp;#34;node2&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;            }
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;        }
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;    ]
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;change-clusters-transient-setting-indicesrecoverymax_bytes_per_sec-to-20mb&#34;&gt;Change cluster&amp;rsquo;s transient setting &amp;lsquo;indices.recovery.max_bytes_per_sec&amp;rsquo; to 20mb&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ curl -X PUT &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;localhost:9200/_cluster/settings?flat_settings=true&amp;amp;pretty&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -d&lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;{
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;    &amp;#34;transient&amp;#34; : {
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;        &amp;#34;indices.recovery.max_bytes_per_sec&amp;#34; : &amp;#34;20mb&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Commands are short, but if I need to pass URL parameters, content type, HTTP verb and a full JSON body, they are no longer short&amp;hellip;&lt;/p&gt;
&lt;p&gt;Of course, I could use some bash alias to hide the &lt;code&gt;-H &#39;Content-Type: application/json&#39;&lt;/code&gt;, or maybe use the excellent &lt;a href=&#34;https://httpie.org/&#34;&gt;HTTPie&lt;/a&gt; but the biggest pain comes from the JSON body!&lt;/p&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;p&gt;I needed a tool which could abstract all those long curl commands and could be flexible enough. After looking on the Internet, it appeared the few tools already written didn&amp;rsquo;t support commands I needed. Thus, I decided to write my own, and I came with a list of requirements:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Requirement&lt;/th&gt;
&lt;th&gt;Solution&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Easy and fast to write&lt;/td&gt;
&lt;td&gt;Python : high-level, easy to read and write, I know it well&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fast to use&lt;/td&gt;
&lt;td&gt;Command-line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Abstract/hide params&lt;/td&gt;
&lt;td&gt;Command-line params and integrated help ! I don&amp;rsquo;t want to remember what verb to use, what URL params to give, what to put in the JSON body, etc&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Don&amp;rsquo;t spend time on building CLI&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/openstack/cliff&#34;&gt;Openstack&amp;rsquo;s Cliff&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Easy to switch cluster, without remembering long server name&lt;/td&gt;
&lt;td&gt;Config file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Each cluster may have different setup (ssl, auth, etc&amp;hellip;)&lt;/td&gt;
&lt;td&gt;Config file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nice and pretty output&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/openstack/cliff&#34;&gt;Cliff&lt;/a&gt; comes with &lt;a href=&#34;https://pypi.org/project/PrettyTable/&#34;&gt;PrettyTable&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Inspiration&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/openstack/python-openstackclient&#34;&gt;Openstack&amp;rsquo;s CLI&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/overview/&#34;&gt;kubectl&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;the-solution&#34;&gt;The solution&lt;/h2&gt;
&lt;p&gt;I ended up writing &lt;a href=&#34;https://github.com/jeromepin/esctl&#34;&gt;esctl&lt;/a&gt;. It checks all my requirements and it&amp;rsquo;s very easy to add new features by inheriting a class based on the output type.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://jeromepin.fr/images/esctl-CLI-design-tree.svg&#34;
         alt=&#34;Esctl subcommands taxonomy&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;Esctl subcommands taxonomy&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It relies on a config file (inspired by &lt;code&gt;kubectl&lt;/code&gt;) to declare settings (global and cluster-wide), clusters, users and contexts (an association of a user and a cluster) :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#00f&#34;&gt;settings&lt;/span&gt;:
  &lt;span style=&#34;color:#00f&#34;&gt;no_check_certificate&lt;/span&gt;: &lt;span style=&#34;color:#00f&#34;&gt;true&lt;/span&gt;
  &lt;span style=&#34;color:#00f&#34;&gt;max_retries&lt;/span&gt;: 0
  &lt;span style=&#34;color:#00f&#34;&gt;timeout&lt;/span&gt;: 20

&lt;span style=&#34;color:#00f&#34;&gt;clusters&lt;/span&gt;:
  &lt;span style=&#34;color:#00f&#34;&gt;localhost&lt;/span&gt;:
    &lt;span style=&#34;color:#00f&#34;&gt;servers&lt;/span&gt;:
    - http://localhost:9200

  &lt;span style=&#34;color:#00f&#34;&gt;foo01-prd-sfo&lt;/span&gt;:
    &lt;span style=&#34;color:#00f&#34;&gt;servers&lt;/span&gt;:
    - https://master01-foo01-prd-sfo1.example.com
    - https://master02-foo01-prd-sfo2.example.com
    - https://master03-foo01-prd-sfo3.example.com
    &lt;span style=&#34;color:#00f&#34;&gt;settings&lt;/span&gt;:
      &lt;span style=&#34;color:#00f&#34;&gt;timeout&lt;/span&gt;: 60

&lt;span style=&#34;color:#00f&#34;&gt;users&lt;/span&gt;:
  &lt;span style=&#34;color:#00f&#34;&gt;jerome&lt;/span&gt;:
    &lt;span style=&#34;color:#00f&#34;&gt;username&lt;/span&gt;: jerome
    &lt;span style=&#34;color:#00f&#34;&gt;password&lt;/span&gt;: P@ssw0rD

&lt;span style=&#34;color:#00f&#34;&gt;contexts&lt;/span&gt;:
  &lt;span style=&#34;color:#00f&#34;&gt;localhost&lt;/span&gt;:
    &lt;span style=&#34;color:#00f&#34;&gt;cluster&lt;/span&gt;: localhost

  &lt;span style=&#34;color:#00f&#34;&gt;production&lt;/span&gt;:
    &lt;span style=&#34;color:#00f&#34;&gt;user&lt;/span&gt;: jerome
    &lt;span style=&#34;color:#00f&#34;&gt;cluster&lt;/span&gt;: foo01-prd-sfo

&lt;span style=&#34;color:#00f&#34;&gt;default-context&lt;/span&gt;: localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Esctl provides a lot of commands and subcommands to manage Elasticsearch:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;usage: esctl [--version] [-v | -q] [--log-file LOG_FILE] [-h] [--debug] [--context CONTEXT]

esctl

optional arguments:
  --version            show program&amp;#39;s version number and exit
  -v, --verbose        Increase verbosity of output. Can be repeated.
  -q, --quiet          Suppress output except warnings and errors.
  --log-file LOG_FILE  Specify a file to log output. Disabled by default.
  -h, --help           Show help message and exit.
  --debug              Show tracebacks on errors.
  --context CONTEXT    Context to use

Commands:
  cat allocation                     Show shard allocation.
  cluster allocation explain         Provide explanations for shard allocations in the cluster.
  cluster health                     Retrieve the cluster health.
  cluster routing allocation enable  Change the routing allocation status.
  cluster stats                      Retrieve the cluster status.
  complete                           print bash completion command (cliff)
  config context list                List all contexts.
  help                               print detailed help for another command (cliff)
  index close                        Close an index.
  index create                       Create an index.
  index delete                       Delete an index.
  index list                         List all indices.
  index open                         Open an index.
  logging get                        Get a logger value.
  logging reset                      Reset a logger value.
  logging set                        Set a logger value.
  node hot-threads                   Print hot threads on each nodes.
  node list                          List nodes.
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;It allows to dramatically shorten previously shown commands :&lt;/p&gt;
&lt;h4 id=&#34;list-indices-1&#34;&gt;List indices&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ esctl index list
+-------+--------+--------+------------------------+---------+---------+------------+--------------+------------+--------------------+
| Index | Health | Status | UUID                   | Primary | Replica | Docs Count | Docs Deleted | Store Size | Primary Store Size |
+-------+--------+--------+------------------------+---------+---------+------------+--------------+------------+--------------------+
| foo   | yellow | open   | VrIiXmIRRA6BNP5JWaXKqA | 1       | 1       | 0          | 0            | 283b       | 283b               |
+-------+--------+--------+------------------------+---------+---------+------------+--------------+------------+--------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;change-the-number-of-replicas-of-a-given-index-1&#34;&gt;Change the number of replicas of a given index&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Not implemented yet. Would look like :&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ esctl index settings set number_of_replicas 2 --index=twitter
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;reset-a-indexs-refresh-interval-to-its-default-value-1&#34;&gt;Reset a index&amp;rsquo;s refresh interval to its default value&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Not implemented yet. Would look like :&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ esctl index settings reset refresh_interval --index=twitter
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;pretty-print-cluster-stats-1&#34;&gt;Pretty-print cluster stats&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ esctl cluster stats
+------------------------------------------------+------------------------------+
| Attribute                                      |                        Value |
+------------------------------------------------+------------------------------+
| _nodes.failed                                  |                            0 |
| _nodes.successful                              |                            1 |
| _nodes.total                                   |                            1 |
...
| nodes.count.coordinating_only                  |                            0 |
| nodes.count.data                               |                            1 |
| nodes.count.ingest                             |                            1 |
| nodes.count.master                             |                            1 |
| nodes.count.total                              |                            1 |
| nodes.discovery_types.single-node              |                            1 |
| nodes.fs.available_in_bytes                    |                  48388599808 |
| nodes.fs.free_in_bytes                         |                  51605315584 |
| nodes.fs.total_in_bytes                        |                  62725623808 |
| nodes.jvm.max_uptime_in_millis                 |                      1565394 |
| nodes.jvm.mem.heap_max_in_bytes                |                   1056309248 |
| nodes.jvm.mem.heap_used_in_bytes               |                    128029720 |
| nodes.jvm.threads                              |                           31 |
| nodes.jvm.versions[0].bundled_jdk              |                         True |
| nodes.jvm.versions[0].count                    |                            1 |
| nodes.jvm.versions[0].using_bundled_jdk        |                         True |
| nodes.jvm.versions[0].version                  |                       12.0.1 |
| nodes.jvm.versions[0].vm_name                  |     OpenJDK 64-Bit Server VM |
| nodes.jvm.versions[0].vm_vendor                |           Oracle Corporation |
| nodes.jvm.versions[0].vm_version               |                    12.0.1+12 |
...
| status                                         |                       yellow |
| timestamp                                      |                1565893455640 |
+------------------------------------------------+------------------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;reroute-shard-0-of-index-test-from-node1-to-node2-1&#34;&gt;Reroute shard 0 of index &amp;lsquo;test&amp;rsquo; from node1 to node2&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Not implemented yet&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;change-clusters-transient-setting-indicesrecoverymax_bytes_per_sec-to-20mb-1&#34;&gt;Change cluster&amp;rsquo;s transient setting &amp;lsquo;indices.recovery.max_bytes_per_sec&amp;rsquo; to 20mb&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Not implemented yet. Would look like :&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ esctl cluster settings set --transient indices.recovery.max_bytes_per_sec 20mb
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;what-a-subcommand-look-likes&#34;&gt;What a subcommand look likes&lt;/h2&gt;
&lt;p&gt;I created 3 output class based on Cliff&amp;rsquo;s ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EsctlCommand&lt;/code&gt; : Doesn&amp;rsquo;t expect any output&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EsctlLister&lt;/code&gt; : Expect a list of elements in order to create a multi-columns table&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EsctlShowOne&lt;/code&gt; : Expect a key-value list to create a two-columns table&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To add a new subcommand, I only need to choose the output class (and inherit my class from it) and write the &lt;code&gt;take_action&lt;/code&gt; method:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#00f&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c34e00&#34;&gt;take_action&lt;/span&gt;(self, parsed_args):
    &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Generate or retrieve data to be displayed.
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;    Arguments:
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;        parsed_args {argparse.Namespace} -- Arguments from the command line.
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;    Returns:
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;        Any -- The data to be displayed, as specified by Cliff
&lt;/span&gt;&lt;span style=&#34;color:#009c00&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#00f&#34;&gt;return&lt;/span&gt; data
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Here is, as a sample, the class associated to the &lt;code&gt;esctl cluster health&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#00f&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#007575&#34;&gt;ClusterHealth&lt;/span&gt;(EsctlShowOne):
    &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Retrieve the cluster health.&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#00f&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c34e00&#34;&gt;take_action&lt;/span&gt;(self, parsed_args):
        &lt;span style=&#34;color:#f00;font-style:italic&#34;&gt;# Retrieve the cluster health using the appropriate elasticsearch-py function. Then order the output and sort it&lt;/span&gt;
        health = self._sort_and_order_dict(Esctl._es.cluster.health())

        &lt;span style=&#34;color:#f00;font-style:italic&#34;&gt;# Add coloration of the &amp;#34;status&amp;#34; (RED, YELLOW, GREEN) key based on it&amp;#39;s value&lt;/span&gt;
        health[&lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;] = Color.colorize(
            health.get(&lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;), getattr(Color, health.get(&lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;).upper())
        )

        &lt;span style=&#34;color:#f00;font-style:italic&#34;&gt;# Return a tuple of tuple. It will lead to a two-column table : &amp;#34;Attribute&amp;#34; and &amp;#34;Value&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#00f&#34;&gt;return&lt;/span&gt; (tuple(health.keys()), tuple(health.values()))
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Which will display :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;+----------------------------------+----------------+
| Field                            | Value          |
+----------------------------------+----------------+
| active_primary_shards            | 0              |
| active_shards                    | 0              |
| active_shards_percent_as_number  | 100.0          |
| cluster_name                     | docker-cluster |
| delayed_unassigned_shards        | 0              |
| initializing_shards              | 0              |
| number_of_data_nodes             | 1              |
| number_of_in_flight_fetch        | 0              |
| number_of_nodes                  | 1              |
| number_of_pending_tasks          | 0              |
| relocating_shards                | 0              |
| status                           | green          |
| task_max_waiting_in_queue_millis | 0              |
| timed_out                        | False          |
| unassigned_shards                | 0              |
+----------------------------------+----------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Instead of :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &amp;#34;cluster_name&amp;#34; : &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;docker-cluster&amp;#34;&lt;/span&gt;,
  &amp;#34;status&amp;#34; : &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;,
  &amp;#34;timed_out&amp;#34; : &lt;span style=&#34;color:#00f&#34;&gt;false&lt;/span&gt;,
  &amp;#34;number_of_nodes&amp;#34; : 1,
  &amp;#34;number_of_data_nodes&amp;#34; : 1,
  &amp;#34;active_primary_shards&amp;#34; : 0,
  &amp;#34;active_shards&amp;#34; : 0,
  &amp;#34;relocating_shards&amp;#34; : 0,
  &amp;#34;initializing_shards&amp;#34; : 0,
  &amp;#34;unassigned_shards&amp;#34; : 0,
  &amp;#34;delayed_unassigned_shards&amp;#34; : 0,
  &amp;#34;number_of_pending_tasks&amp;#34; : 0,
  &amp;#34;number_of_in_flight_fetch&amp;#34; : 0,
  &amp;#34;task_max_waiting_in_queue_millis&amp;#34; : 0,
  &amp;#34;active_shards_percent_as_number&amp;#34; : 100.0
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>PATCH-er selon la RFC</title>
      <link>https://jeromepin.fr/patcher-selon-la-rfc/</link>
      <pubDate>Tue, 02 Apr 2019 16:08:00 +0100</pubDate>
      
      <guid>https://jeromepin.fr/patcher-selon-la-rfc/</guid>
      <description>&lt;h2 id=&#34;put-mise-à-jour-totale&#34;&gt;PUT: mise à jour totale&lt;/h2&gt;
&lt;p&gt;La plupart des APIs REST proposent des mécanismes pour modifier des ressources, notamment grâce au verbe &lt;em&gt;PUT&lt;/em&gt; qui permet d&amp;rsquo;envoyer la ressource à mettre à jour. &lt;em&gt;PUT&lt;/em&gt; pose tout de même 3 problèmes :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Il est nécéssaire de faire un &lt;em&gt;GET&lt;/em&gt; au préalable afin d&amp;rsquo;obtenir la totalité de la ressource&lt;/li&gt;
&lt;li&gt;Il faut s&amp;rsquo;assurer que la ressource n&amp;rsquo;a pas été modifiée côté serveur entre le &lt;em&gt;GET&lt;/em&gt; et le &lt;em&gt;PUT&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Il faut envoyer l&amp;rsquo;intégralité de la ressource, y compris les champs qui restent inchangés.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La méthode &lt;em&gt;PUT&lt;/em&gt; apparait ne pas être la solution idéale pour effectuer une mise à jour partielle.&lt;/p&gt;
&lt;p&gt;Certaines API proposent d&amp;rsquo;exposer directement chaque champ de la ressource et d&amp;rsquo;utiliser &lt;em&gt;PUT&lt;/em&gt; pour faire la mise à jour :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;PUT /users/jeromepin/age

24
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;C&amp;rsquo;est une solution simple mais qui rajoute beaucoup de complexité dans l&amp;rsquo;API. Et si le client souhaite mettre à jour plusieurs informations, il doit effectuer plusieurs appels &lt;em&gt;PUT&lt;/em&gt;. La solution n&amp;rsquo;est toujours pas là. Heureusement, la &lt;a href=&#34;https://tools.ietf.org/html/rfc5789&#34;&gt;RFC 5789&lt;/a&gt; propose un verbe HTTP conçu pour les mises à jour partielles : &lt;em&gt;PATCH&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;patch-mauvais-usage&#34;&gt;PATCH: mauvais usage&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PATCH&lt;/em&gt; permet donc de modifier &lt;strong&gt;partiellement&lt;/strong&gt; une ressource donnée. Ainsi beaucoup d&amp;rsquo;APIs ont ajouté le support de ce verbe au travers d&amp;rsquo;appels tels que :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;PATCH /users/jeromepin

age=25
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;ou encore :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;PATCH /users/jeromepin

{ &amp;#34;age&amp;#34; : &amp;#34;25&amp;#34; }
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;CE N&amp;rsquo;EST PAS LE RÔLE DE &lt;em&gt;PATCH&lt;/em&gt; !&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PATCH&lt;/em&gt; ne doit pas envoyer une partie d&amp;rsquo;une ressource.&lt;/p&gt;
&lt;h2 id=&#34;patch-er-correctement&#34;&gt;PATCH-er correctement&lt;/h2&gt;
&lt;p&gt;Le but de &lt;em&gt;PATCH&lt;/em&gt; n&amp;rsquo;est pas seulement de mettre à jour une ressource. En réalité, ce n&amp;rsquo;est pas du tout la façon dont &lt;em&gt;PATCH&lt;/em&gt; doit fonctionner. La RFC indique :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The difference between the PUT and PATCH requests is reflected in the way the server processes the enclosed entity to modify the resource identified by the Request-URI.  In a PUT request, the enclosed entity is considered to be a modified version of the resource stored on the origin server, and the client is requesting that the stored version be replaced.  With PATCH, however, the enclosed entity contains a set of instructions describing how a resource currently residing on the origin server should be modified to produce a new version.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Il est clairement indiqué que &lt;em&gt;PATCH&lt;/em&gt;, contrairement à &lt;em&gt;PUT&lt;/em&gt; qui envoi la nouvelle ressource dans son intégralité, doit envoyer une &lt;strong&gt;liste d&amp;rsquo;instructions décrivant la façon selon laquelle la ressource située sur le serveur doit être modifiée&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Une requête &lt;em&gt;PATCH&lt;/em&gt; ressemble à ça :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;color:#c34e00&#34;&gt;PATCH&lt;/span&gt; /users/jeromepin &lt;span style=&#34;color:#00f&#34;&gt;HTTP&lt;/span&gt;/1.1
Host: www.example.com
Content-Type: application/example

[description of changes]
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;[description of changes]&lt;/code&gt; est appelé &amp;ldquo;&lt;em&gt;patch document&lt;/em&gt;&amp;rdquo; (ou plus simplement &amp;ldquo;&lt;em&gt;patch&lt;/em&gt;&amp;quot;). Le format de ce patch n&amp;rsquo;est pas défini dans cette RFC est peut-être de n&amp;rsquo;importe quel type comme par exemple la sortie de la commande &lt;code&gt;diff&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;color:#c34e00&#34;&gt;PATCH&lt;/span&gt; /users/jeromepin &lt;span style=&#34;color:#00f&#34;&gt;HTTP&lt;/span&gt;/1.1
Host: www.example.com
Content-Type: application/diff

--- old-json	2019-04-01 12:02:50.000000000 +0200
+++ new-json	2019-04-01 12:03:00.000000000 +0200
@@ -1,4 +1,4 @@
{
    &amp;#34;name&amp;#34;: &amp;#34;Jerome Pin&amp;#34;,
-   &amp;#34;age&amp;#34;: 24
+   &amp;#34;age&amp;#34;: 25
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Le &lt;code&gt;Content-Type&lt;/code&gt; du &lt;em&gt;PATCH&lt;/em&gt; doit être adapté au format du patch envoyé.&lt;/p&gt;
&lt;p&gt;Le serveur &lt;strong&gt;DOIT&lt;/strong&gt; appliquer la totalité des changements de la requête de façon atomique et ne jamais fournir (c.à.d enregistrer en base ou retourner à un client) la ressource partiellement modifiée. Si le patch ne peut pas être appliqué dans sa totalité, alors il ne doit pas être appliqué du tout.&lt;/p&gt;
&lt;h3 id=&#34;quel-format-pour-un-patch-&#34;&gt;Quel format pour un patch ?&lt;/h3&gt;
&lt;p&gt;La RFC 5789 est très souple et n&amp;rsquo;indique pas de type spécifique pour le format du patch, ainsi, c&amp;rsquo;est au serveur de veiller à supporter le type de patch approprié aux documents qu&amp;rsquo;il manipule.&lt;/p&gt;
&lt;p&gt;Heureusement, pour la manipulation de documents JSON (issus par exemple de base de données orientées documents), les RFC &lt;a href=&#34;https://tools.ietf.org/html/rfc6901&#34;&gt;6901&lt;/a&gt; et &lt;a href=&#34;https://tools.ietf.org/html/rfc6902&#34;&gt;6902&lt;/a&gt; définissent respectivement les termes &lt;em&gt;&amp;ldquo;JSON Pointer&amp;rdquo;&lt;/em&gt; et &lt;em&gt;&amp;ldquo;JSON Patch&amp;rdquo;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Un &lt;em&gt;&amp;ldquo;JSON Pointer&amp;rdquo;&lt;/em&gt; défini une syntaxe sous forme de chaine de caractères pour identifier une valeur spécifique au sein d&amp;rsquo;un objet JSON : &lt;code&gt;/users/0/email&lt;/code&gt;.
Un &lt;em&gt;&amp;ldquo;JSON Patch&amp;rdquo;&lt;/em&gt; défini la structure d&amp;rsquo;un document JSON permettant d&amp;rsquo;exprimer une série de modifications à appliquer à un document JSON :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;[
     { &amp;#34;op&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;, &amp;#34;path&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;/a/b/c&amp;#34;&lt;/span&gt;, &amp;#34;value&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt; },
     { &amp;#34;op&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;remove&amp;#34;&lt;/span&gt;, &amp;#34;path&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;/a/b/c&amp;#34;&lt;/span&gt; },
     { &amp;#34;op&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;add&amp;#34;&lt;/span&gt;, &amp;#34;path&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;/a/b/c&amp;#34;&lt;/span&gt;, &amp;#34;value&amp;#34;: [ &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt; ] },
     { &amp;#34;op&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;replace&amp;#34;&lt;/span&gt;, &amp;#34;path&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;/a/b/c&amp;#34;&lt;/span&gt;, &amp;#34;value&amp;#34;: 42 },
     { &amp;#34;op&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;move&amp;#34;&lt;/span&gt;, &amp;#34;from&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;/a/b/c&amp;#34;&lt;/span&gt;, &amp;#34;path&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;/a/b/d&amp;#34;&lt;/span&gt; },
     { &amp;#34;op&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;copy&amp;#34;&lt;/span&gt;, &amp;#34;from&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;/a/b/d&amp;#34;&lt;/span&gt;, &amp;#34;path&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;/a/b/e&amp;#34;&lt;/span&gt; }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Avec ces deux nouvelles RFC, il est possible d&amp;rsquo;effectuer une requête &lt;em&gt;PATCH&lt;/em&gt; pour enfin modifier un document JSON :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;color:#c34e00&#34;&gt;PATCH&lt;/span&gt; /users/jeromepin &lt;span style=&#34;color:#00f&#34;&gt;HTTP&lt;/span&gt;/1.1
Host: www.example.com
Content-Type: application/json-patch+json

[
    { &amp;#34;op&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;replace&amp;#34;&lt;/span&gt;, &amp;#34;path&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;/age&amp;#34;&lt;/span&gt;, &amp;#34;value&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;25&amp;#34;&lt;/span&gt; }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Dans le cas où le serveur manipule du XML, une &lt;a href=&#34;http://tools.ietf.org/html/rfc5261&#34;&gt;RFC&lt;/a&gt; décrit un format équivalent au JSON-Patch.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Cet usage de &lt;em&gt;PATCH&lt;/em&gt; reste très peu connu. Il est censé être le standard à utiliser pour des mises à jour partielles, mais il est facile de s&amp;rsquo;aperçevoir qu&amp;rsquo;un tel fonctionnement complexifie la gestion du serveur et la façon dont nous avons l&amp;rsquo;habitude d&amp;rsquo;utiliser les verbes plus traditionnels (&lt;em&gt;GET&lt;/em&gt;, &lt;em&gt;POST&lt;/em&gt;, &lt;em&gt;PUT&lt;/em&gt;). La RFC étant très souple, il est tout à fait possible d&amp;rsquo;utiliser son propre format de patch, ainsi pour incrémenter l&amp;rsquo;age, il est possible de faire quelque chose comme :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;color:#c34e00&#34;&gt;PATCH&lt;/span&gt; /users/jeromepin &lt;span style=&#34;color:#00f&#34;&gt;HTTP&lt;/span&gt;/1.1
Host: www.example.com
Content-Type: application/custom-format+json

[
    { &amp;#34;increment&amp;#34;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;age&amp;#34;&lt;/span&gt; }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Évidemment, d&amp;rsquo;un point de vue conceptuel, il faut alors se demander si cette façon d&amp;rsquo;envoyer des actions plutôt que des états est compatible avec la philosophie REST ? N&amp;rsquo;est-ce pas plus proche de RPC ?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Construire de bons microservices</title>
      <link>https://jeromepin.fr/construire-de-bons-microservices/</link>
      <pubDate>Sun, 02 Sep 2018 14:51:00 +0100</pubDate>
      
      <guid>https://jeromepin.fr/construire-de-bons-microservices/</guid>
      <description>&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;La configuration d&amp;rsquo;un service doit être optionnelle et tous ses paramètres doivent avoir une valeur par défaut :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#00f&#34;&gt;const&lt;/span&gt; ELASTICSEARCH_HOST = process.env.ELASTICSEARCH_HOST || &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Ou encore :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ELASTICSEARCH_HOST=&lt;span style=&#34;color:#009c00&#34;&gt;${&lt;/span&gt;$ELASTICSEARCH_HOST&lt;span style=&#34;color:#00f&#34;&gt;:-&lt;/span&gt;localhost&lt;span style=&#34;color:#009c00&#34;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Chaque élément de configuration doit être modifiable par une variable d&amp;rsquo;environnement correctement nommée. L&amp;rsquo;intérêt est de permettre de changer le comportement de l&amp;rsquo;application au &lt;em&gt;runtime&lt;/em&gt; plutôt qu&amp;rsquo;au &lt;em&gt;buildtime&lt;/em&gt;. De plus, l&amp;rsquo;usage d&amp;rsquo;orchestrateurs de conteneurs comme &lt;em&gt;Docker Swarm&lt;/em&gt; ou &lt;em&gt;Kubernetes&lt;/em&gt; rendent plus pratique le passage de variables d&amp;rsquo;environnement que de fichiers de configuration.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#00f&#34;&gt;apiVersion&lt;/span&gt;: v1
&lt;span style=&#34;color:#00f&#34;&gt;kind&lt;/span&gt;: Pod
&lt;span style=&#34;color:#00f&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#00f&#34;&gt;name&lt;/span&gt;: foo
&lt;span style=&#34;color:#00f&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#00f&#34;&gt;containers&lt;/span&gt;:
  - &lt;span style=&#34;color:#00f&#34;&gt;name&lt;/span&gt;: foo
    &lt;span style=&#34;color:#00f&#34;&gt;image&lt;/span&gt;: foo:1.0
    &lt;span style=&#34;color:#00f&#34;&gt;env&lt;/span&gt;:
    - &lt;span style=&#34;color:#00f&#34;&gt;name&lt;/span&gt;: ELASTICSEARCH_HOST
      &lt;span style=&#34;color:#00f&#34;&gt;value&lt;/span&gt;: &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;elasticsearch.example.com&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;signaux-et-fermeture&#34;&gt;Signaux et fermeture&lt;/h2&gt;
&lt;p&gt;Une application doit être en mesure de réagir aux &lt;a href=&#34;http://man7.org/linux/man-pages/man7/signal.7.html&#34;&gt;signaux&lt;/a&gt; envoyés par l&amp;rsquo;OS et en tirer parti. Par exemple, &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt; recharge sa configuration à la réception d&amp;rsquo;un SIGHUP :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kill -HUP 1234
INFO[1234] Loading configuration file prometheus.yml source=main.go:201
INFO[1234] Stopping target manager... source=targetmanager.go:281
INFO[1234] Target manager stopped. source=targetmanager.go:216
INFO[1234] Starting target manager... source=targetmanager.go:122
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;L&amp;rsquo;application doit s&amp;rsquo;éteindre proprement lorsqu&amp;rsquo;elle reçoit un &lt;code&gt;SIGTERM&lt;/code&gt;. Elle doit pouvoir nettoyer tous les éléments externes dont elle a eu besoin : connections ouvertes, caches utilisés, fichiers ouverts, fichiers temporaires créés, etc&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;logs&#34;&gt;Logs&lt;/h2&gt;
&lt;p&gt;La gestion des logs est souvent bien plus complexe que ce que l&amp;rsquo;on pense. Il est donc généralement intéressant de faire usage d&amp;rsquo;une librairie dédiée. Cette librairie est en charge de différents paramètres :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;format : JSON, clé-valeur&lt;/li&gt;
&lt;li&gt;contexte : date et heure, module émétteur&lt;/li&gt;
&lt;li&gt;export : réseau (&lt;code&gt;tcp/udp&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;kafka&lt;/code&gt;, &amp;hellip;), &lt;code&gt;syslog&lt;/code&gt;, fichiers&lt;/li&gt;
&lt;li&gt;rotation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dans le cas d&amp;rsquo;un microservice, l&amp;rsquo;application ne doit pas s&amp;rsquo;occuper du routage et du stockage de ses logs. Elle doit simplement écrire dans &lt;code&gt;stdout&lt;/code&gt; et &lt;code&gt;stderr&lt;/code&gt; en fonction des besoins, et laisser un routeur de logs (comme &lt;a href=&#34;https://github.com/fluent/fluentd&#34;&gt;fluentd&lt;/a&gt; ou &lt;a href=&#34;https://www.elastic.co/products/beats/filebeat&#34;&gt;filebeat&lt;/a&gt;) gérer et acheminer les logs.&lt;/p&gt;
&lt;p&gt;Chaque message de log doit être associé au bon niveau (&lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &amp;hellip;) pour qu&amp;rsquo;il puisse être affiché et/ou traité de façon optimale. Il peut être intéressant d&amp;rsquo;afficher un message pour certains cas :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Message de démarrage de l&amp;rsquo;application;&lt;/li&gt;
&lt;li&gt;Ports sur lesquels elle écoute;&lt;/li&gt;
&lt;li&gt;Services auxquels elle est connectée;&lt;/li&gt;
&lt;li&gt;Évènements prévus et imprévus;&lt;/li&gt;
&lt;li&gt;Signaux reçus;&lt;/li&gt;
&lt;li&gt;Fermeture;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;[foo] [INFO] Listening on port 80&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[foo] [INFO] Connected to mysql://foo:bar@host:port/database. Alive and kicking !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[foo] [INFO] SIGHUP received. Reloading configuration&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[foo] [INFO] Shutting down&amp;hellip; Closing connexions, removing temporary files&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;choix-du-langage&#34;&gt;Choix du langage&lt;/h2&gt;
&lt;h3 id=&#34;éviter-les-langages-à-machines-virtuelles&#34;&gt;Éviter les langages à machines virtuelles&lt;/h3&gt;
&lt;p&gt;Les langages basés sur des machines virtuelles (Java, Clojure, Erlang, .NET) sont plus lents à démarrer et ont nécessairement besoin de plus de ressources. De plus, ces machines virtuelles sont généralement conçues pour gérer de large applications monolithiques qui ont besoin de fonctionnalités avancées de gestion de mémoire, de CPU, de threads, etc&amp;hellip; Ces fonctionnalités sont redondantes avec les orchestrateurs et les runtimes et peuvent créer des conflits, comme par exemple la JVM qui ne supporte pas (ou mal) les limites de CPU et de mémoire définies dans un conteneur. Seules les &lt;a href=&#34;https://bugs.openjdk.java.net/browse/JDK-8196595&#34;&gt;versions les plus récentes du JDK 10&lt;/a&gt; permettent une prise en charge correcte de ces paramètres.&lt;/p&gt;
&lt;h3 id=&#34;créer-des-binaires-statiques&#34;&gt;Créer des binaires statiques&lt;/h3&gt;
&lt;p&gt;Utiliser un langage qui crée des binaires statiques présente plusieurs avantages :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;le binaire est portable : les librairies liées sont distribuées avec le binaire;&lt;/li&gt;
&lt;li&gt;il n&amp;rsquo;est pas nécessaire d&amp;rsquo;avoir une arborescence complète d&amp;rsquo;un OS (&lt;code&gt;/bin&lt;/code&gt;, &lt;code&gt;/usr/bin&lt;/code&gt;, &lt;code&gt;/tmp&lt;/code&gt;, etc&amp;hellip;) pour exécuter le binaire;&lt;/li&gt;
&lt;li&gt;la construction du binaire est prévisible;&lt;/li&gt;
&lt;li&gt;le binaire est moins sensible aux contaminations de ses librairies par des tierces-parties;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C&amp;rsquo;est avec toutes ces contraintes que des langages comme &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; et &lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt; ont vu leur popularité croître énormément ces dernière années.&lt;/p&gt;
&lt;p&gt;Pour un même programme C++ :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#f00;font-style:italic&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#f00;font-style:italic&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f00;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f00;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#00f&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#c34e00&#34;&gt;main&lt;/span&gt;() {
    std::cout &amp;lt;&amp;lt; &lt;span style=&#34;color:#009c00&#34;&gt;&amp;#34;Foo&amp;#34;&lt;/span&gt;;
    &lt;span style=&#34;color:#00f&#34;&gt;return&lt;/span&gt; 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Le binaire compilé dynamiquement pèse 7.8Ko contre 1.6Mo statiquement. La différence vient de la présence (ou non) des librairies nécessaires au sein du binaire.&lt;/p&gt;
&lt;p&gt;La commande &lt;code&gt;ldd&lt;/code&gt; permet de connaître les librairies liées au binaire :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ g++ -o foo foo.cpp
$ ldd foo
	linux-vdso.so.1 (0x00007fffc9ff8000)
	libstdc++.so.6 =&amp;gt; /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f6c9c4b6000)
	libm.so.6 =&amp;gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007f6c9c1b5000)
	libgcc_s.so.1 =&amp;gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f6c9bf9f000)
	libc.so.6 =&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f6c9bbf4000)
	/lib64/ld-linux-x86-64.so.2 (0x00007f6c9c7c1000)
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Mon binaire &lt;code&gt;foo&lt;/code&gt; requiert notamment &lt;code&gt;libstdc++.so.6 &lt;/code&gt; (&lt;code&gt;/usr/lib/x86_64-linux-gnu/libstdc++.so.6&lt;/code&gt;) et &lt;code&gt;libc.so.6&lt;/code&gt; (&lt;code&gt;/lib/x86_64-linux-gnu/libc.so.6&lt;/code&gt;). Si je distribue ce binaire sur une autre machine, il faudra non seulement qu&amp;rsquo;elle tourne sur le même OS, mais aussi que les librairies soient les mêmes (chemin et version) :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mv /lib/x86_64-linux-gnu/libc.so.6 /lib/x86_64-linux-gnu/libc.so.6.old
$ ./foo
./foo: error &lt;span style=&#34;color:#00f&#34;&gt;while&lt;/span&gt; loading shared libraries: libc.so.6: cannot open shared object file: No such file or directory
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;stateless-vs-stateful&#34;&gt;Stateless vs Stateful&lt;/h2&gt;
&lt;p&gt;Un bon conteneur est un conteneur que l&amp;rsquo;on peut déplacer et redémarrer à la demande, sans pré-requis. Il faut donc qu&amp;rsquo;il soit le plus possible &lt;code&gt;stateless&lt;/code&gt; : toutes les données persistantes dont a besoin l&amp;rsquo;application doivent être stockées dans des systèmes externes comme une base de données. Il ne doit pas y avoir de différence entre plusieurs instances d&amp;rsquo;une application.&lt;/p&gt;
&lt;h2 id=&#34;robustesse-healthchecks-et-timeouts&#34;&gt;Robustesse, healthchecks et timeouts&lt;/h2&gt;
&lt;p&gt;L&amp;rsquo;application doit être en mesure de gérer les erreurs via une dégradation de service ou via du &lt;em&gt;back-off&lt;/em&gt; plutôt que de crasher. Elle doit pouvoir non-seulement répondre à des &lt;em&gt;health checks&lt;/em&gt; (via une route http par exemple) mais aussi en émettre afin de surveiller la disponibilité des services liés.&lt;/p&gt;
&lt;p&gt;À un stade plus avancé, l&amp;rsquo;application doit supporter des mécanismes plus complexes comme les &lt;em&gt;timeouts&lt;/em&gt;, le &lt;em&gt;throttling&lt;/em&gt; et les &lt;a href=&#34;https://en.wikipedia.org/wiki/Circuit_breaker_design_pattern&#34;&gt;circuit-breakers&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sharding : Propriétés et fonctionnement</title>
      <link>https://jeromepin.fr/sharding-proprietes-et-fonctionnement/</link>
      <pubDate>Thu, 12 Jul 2018 08:54:00 +0100</pubDate>
      
      <guid>https://jeromepin.fr/sharding-proprietes-et-fonctionnement/</guid>
      <description>&lt;p&gt;Le sharding (aussi souvent nommé &lt;em&gt;horizontal partitioning&lt;/em&gt;) est une méthode de séparation des données d&amp;rsquo;une base de données en plusieurs groupes logiques, généralement répartis sur plusieurs nœuds d&amp;rsquo;un cluster.&lt;/p&gt;
&lt;p&gt;Le sharding a plusieurs avantages :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dépasser les limitations d&amp;rsquo;une machine seule (CPU, stockage, etc&amp;hellip;);&lt;/li&gt;
&lt;li&gt;effectuer des traitements concurrents;&lt;/li&gt;
&lt;li&gt;limiter la diffusion d&amp;rsquo;une requête à un sous-set de données;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Le sharding est souvent implémenté au niveau de la base de donnée elle-même (comme &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/6.2/_basic_concepts.html#getting-started-shards-and-replicas&#34;&gt;Elasticsearch&lt;/a&gt;, Cassandra ou &lt;a href=&#34;https://docs.mongodb.com/manual/sharding/&#34;&gt;MongoDB&lt;/a&gt;) mais peut aussi l&amp;rsquo;être au niveau applicatif pour supporter des bases de données où le sharding n&amp;rsquo;est pas natif (comme &lt;a href=&#34;https://redis.io/topics/partitioning&#34;&gt;Redis&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Il existe plusieurs stratégies pour distribuer des données dans plusieurs base de données. Chacune a ses avantages et ses inconvénients et doit être choisie avec soin en fonction des besoins et des contraintes. Quelle que soit la stratégie choisie, il faut toujours prendre en compte les possibles &lt;strong&gt;hotspots&lt;/strong&gt; : une distribution inégale des données entraine une surutilisation de certains shards et réduit presque à néant l&amp;rsquo;intérêt du sharding.&lt;/p&gt;
&lt;h2 id=&#34;principes-de-base&#34;&gt;Principes de base&lt;/h2&gt;
&lt;h3 id=&#34;notions&#34;&gt;Notions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;clé de shard : (&lt;em&gt;shard key&lt;/em&gt;) Suite de caractères qui identifie de façon unique un shard.&lt;/li&gt;
&lt;li&gt;shard logique : (&lt;em&gt;logical shard&lt;/em&gt;) Ensemble de données stockées sur un seul nœud et partageant la même clé de shard.&lt;/li&gt;
&lt;li&gt;shard physique : (&lt;em&gt;physical shard&lt;/em&gt;) Un nœud du cluster, il peut contenir plusieurs shards logiques.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;comment-les-données-sont-lues-et-écrites&#34;&gt;Comment les données sont lues et écrites&lt;/h3&gt;
&lt;p&gt;Les bases de données sont utilisées pour stocker des données. Par conséquent le choix de la stratégie de sharding dépend de ces accès. Il s&amp;rsquo;agit de définir à l&amp;rsquo;avance les &lt;a href=&#34;https://landing.google.com/sre/sre-book/chapters/service-level-objectives/&#34;&gt;SLOs&lt;/a&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Quelle est la distribution entre la lecture et l&amp;rsquo;écriture ? (50/50, 80/20, etc&amp;hellip;)&lt;/li&gt;
&lt;li&gt;Quels volumes sont gérés ?&lt;/li&gt;
&lt;li&gt;Quels sont les objectifs de performance ? (latence, vitesse, etc&amp;hellip;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;comment-les-données-sont-distribuées&#34;&gt;Comment les données sont distribuées&lt;/h3&gt;
&lt;p&gt;Les &lt;strong&gt;hotspot&lt;/strong&gt; contrebalancent presque totalement l&amp;rsquo;intérêt du sharding. Il faut donc choisir avec soin le critère sur lequel les données vont être distribuées. Se baser sur une clé trop commune et non-uniformément distribuée va créer un déséquilibre dans la répartition de nos données.&lt;/p&gt;
&lt;p&gt;Par exemple, dans une base de données qui stocke des documents utilisateurs, distribuer les données en se basant sur l&amp;rsquo;identifiant de l&amp;rsquo;utilisateur est une mauvaise idée. Si un utilisateur enregistre beaucoup plus de documents que les autres, le shard auquel il est associé va croître fortement. Que va-t-il se passer lorsque ce shard dépassera la taille d&amp;rsquo;un nœud ? Comment ce shard va impacter les performances du reste du cluster ?&lt;/p&gt;
&lt;h3 id=&#34;comment-gérer-la-redistribution-des-données&#34;&gt;Comment gérer la redistribution des données&lt;/h3&gt;
&lt;p&gt;Une fois que les questions ci-dessus sont traitées, que le cluster fonctionne et que l&amp;rsquo;utilisation prend de l&amp;rsquo;ampleur, un premier problème survient : comment ajouter/modifier/supprimer des nœuds sans affecter les performances ?&lt;/p&gt;
&lt;p&gt;Lors de la modification de l&amp;rsquo;état du cluster, les données stockées vont devoir être redistribuées et il va falloir en déplacer de grandes quantités rapidement sans avoir d&amp;rsquo;incidence sur les performances.&lt;/p&gt;
&lt;h2 id=&#34;sharding-algorithmique&#34;&gt;Sharding algorithmique&lt;/h2&gt;
&lt;p&gt;Le sharding algorithmique (aussi nommé &lt;em&gt;Client side partitioning&lt;/em&gt;) permet au client de déterminer le shard sans aide extérieure, en se basant uniquement sur une fonction généralement de la forme &lt;code&gt;hash(key) % num_nodes&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-routing-field.html&#34;&gt;Elasticsearch&lt;/a&gt; utilise cette stratégie pour définir sur quel shard doit se trouver un document :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;shard_num = hash_murmur3(doc._id) % num_primary_shards
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Le sharding algorithmique distribue les données en se basant uniquement sur cette fonction, et ne prend en compte aucun paramètre extérieur comme le taux d&amp;rsquo;utilisation d&amp;rsquo;un nœud, la taille de la donnée à traiter, etc&amp;hellip;&lt;/p&gt;
&lt;p&gt;Redistribuer les données peut s&amp;rsquo;avérer complexe : cela requiert non seulement de déplacer les données mais aussi de mettre à jour la fonction utilisée. La fonction idéale ne devrait pas nécessiter de déplacer plus de &lt;code&gt;1/n&lt;/code&gt; données et ne devrait pas déplacer des données qui n&amp;rsquo;ont pas besoin de l&amp;rsquo;être.&lt;/p&gt;
&lt;h2 id=&#34;sharding-dynamique&#34;&gt;Sharding dynamique&lt;/h2&gt;
&lt;p&gt;Le sharding dynamique (parfois nommé &lt;em&gt;Proxy assisted partitioning&lt;/em&gt;) nécessite un &lt;strong&gt;service externe&lt;/strong&gt; pour déterminer l&amp;rsquo;emplacement d&amp;rsquo;une donnée. Ce service agit comme un annuaire et indique la correspondance entre une clé (ou un ensemble de clés) et le shard sur lequel cette clé est assignée. Par exemple, &lt;a href=&#34;https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html#NameNode_and_DataNodes&#34;&gt;HDFS&lt;/a&gt; utilise un &lt;em&gt;Namenode&lt;/em&gt; pour stocker ses métadonnnées.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;range&lt;/th&gt;
&lt;th&gt;shard&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0, 3&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4, 7&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8, B&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C, F&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Pour lire ou écrire une donnée, les clients ont nécessairement besoin de contacte le service de localisation. Celui va ensuite contacter la base de données elle-même, faisant office de proxy.&lt;/p&gt;
&lt;p&gt;Ce service externe permet de mieux gérer les données non-uniformément distribuées puisque les ensembles de clés n&amp;rsquo;ont pas besoin d&amp;rsquo;être de taille identique mais peuvent varier en fonction des besoins.&lt;/p&gt;
&lt;p&gt;En revanche, il devient aussi un point de défaillance unique : chaque lecture ou écriture a besoin d&amp;rsquo;y accéder, il faut donc que la stabilité et les performances soient au rendez-vous. Il ne peut pas être caché ni dupliqué  facilement : des données obsolètes causeraient un désastre sur le cluster.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Le sharding ajoute de la complexité non seulement en termes de développement mais aussi d&amp;rsquo;opérations : les données ne sont plus stockées au même endroit, le réseau introduit de la latence, la topologie change, plus de serveurs doivent être configurés, etc&amp;hellip;&lt;/p&gt;
&lt;p&gt;Le sharding ne doit pas être le premier axe d&amp;rsquo;amélioration. Bien connaître les données que à stocker et la façon dont elles vont être utilisées est beaucoup plus important. Utiliser un serveur plus puissant suffit souvent à régler les problèmes de performances tant que l&amp;rsquo;échelle reste modérée.&lt;/p&gt;
&lt;p&gt;Si l&amp;rsquo;application est limitée par les performances de lecture de la base de données, ajouter des &lt;strong&gt;caches&lt;/strong&gt; ou des &lt;strong&gt;replicas de lecture&lt;/strong&gt; peut corriger le problème sans ajouter trop de complexité.&lt;/p&gt;
&lt;p&gt;Enfin, il est important de s&amp;rsquo;assurer que les données sont organisées de façon optimale : les blobs sont sur un stockage externe (système de fichier, stockage objets, etc&amp;hellip;), l&amp;rsquo;analyse et la recherche sont délégués à d&amp;rsquo;autres systèmes, etc&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>